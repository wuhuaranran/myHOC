{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.536152c499b24f4d238d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\nimport HOCList from '../components/HOCList';\r\nimport CommentList from '../components/CommentList';\r\nimport BlogPost from '../components/BlogPost';\r\nimport DataSource from '../components/DataSource'\r\n\r\nexport default class extends React.Component {\r\n    static async getInitialProps() {\r\n        return { data: 0 }\r\n        // if (!process.browser) {\r\n        //     const res = await axios.get('http://api.football-data.org/v1/competitions/426/leagueTable');\r\n        //     // Return properties\r\n        //     return { data: res.data }\r\n        // } else {\r\n        //     const bplData = JSON.parse(sessionStorage.getItem('bpl'));\r\n        //     // Filter and return data based on query\r\n        //     return { data: bplData }\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    withSubscription = (WrappedComponent, selectData) => {\r\n    // ……返回另一个新组件……\r\n    return class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.handleChange = this.handleChange.bind(this);\r\n            this.state = {\r\n                data: selectData(DataSource, props)\r\n            };\r\n        }\r\n\r\n        componentDidMount() {\r\n            // ……注意订阅数据……\r\n            DataSource.addChangeListener(this.handleChange);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            DataSource.removeChangeListener(this.handleChange);\r\n        }\r\n\r\n        handleChange() {\r\n            this.setState({\r\n                data: selectData(DataSource, this.props)\r\n            });\r\n        }\r\n\r\n        render() {\r\n            // ……使用最新的数据渲染组件\r\n            // 注意此处将已有的props属性传递给原组件\r\n            return <WrappedComponent data={this.state.data} {...this.props} />;\r\n        }\r\n    };\r\n}\r\n\r\n    render() {\r\n        const CommentListWithSubscription = this.withSubscription(\r\n            CommentList,\r\n            (DataSource) => DataSource.getComments()\r\n        );\r\n\r\n        const BlogPostWithSubscription = this.withSubscription(\r\n            BlogPost,\r\n            (DataSource, props) => DataSource.getBlogPost(props.id)\r\n        );\r\n        console.log(CommentListWithSubscription);\r\n        console.log(BlogPostWithSubscription);\r\n        return (\r\n            <div>\r\n                hello hoc\r\n                <CommentListWithSubscription />\r\n                <BlogPostWithSubscription />\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AAHA;AAMA;AACA;AARA;AAAA;AAAA;AAUA;AACA;AACA;AAZA;AAAA;AAAA;AAeA;AACA;AAhBA;AAAA;AAAA;AAmBA;AACA;AADA;AAGA;AAtBA;AAAA;AAAA;AAyBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5BA;AACA;AADA;AAAA;AAAA;AA8BA;AACA;;;;;;AAnCA;;;AAoCA;AACA;AAEA;AAAA;AAGA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;AAnEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;;;;;;;;;;;;;;;;AAHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}